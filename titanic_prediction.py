# -*- coding: utf-8 -*-
"""Titanic_Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rPw2ADjOa13tlSmkDhXGxdRZzvfjcchO

**Titanic-Prediction**

IMPORTING DEPENDENCIES
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

"""DATA COLLECTION & PROCESSING"""

#LOAD THE DATA FROM CSV FILE TO PANDAS DATAFRAME
titanic_data = pd.read_csv('/content/train.csv')

# printing first 5 rows of dataframe
titanic_data.head()

# to check no.of rows and colomns (rows,colomns)
titanic_data.shape

# getting more info about the data
titanic_data.info()

# check no. of missing values in each coloumn
titanic_data.isnull().sum()

"""HANDLING THE MISSING VALUES"""

# drop/remove the "CABIN" colomn from dataframe
 # titanic_data = titanic_data.drop(columns='Cabin', axis=1)

# replacing the missing values in "AGE" columns with missing values
titanic_data['Age'].fillna(titanic_data['Age'].mean(), inplace=True)

# finding the mode value of "EMBARKED" column
print(titanic_data['Embarked'].mode())

print(titanic_data['Embarked'].mode()[0])

# replacing the missing values in "EMBARKED" column with mode value
titanic_data['Embarked'].fillna(titanic_data['Embarked'].mode()[0], inplace=True)

# check no. of missing values in each coloumn AGAINN
titanic_data.isnull().sum()

"""DATA ANALYSIS"""

# getting some statistical measures about the data
titanic_data.describe()

# finding the no. of people survived or NOT survived
titanic_data['Survived'].value_counts()

"""DATA VISUALIZATION"""

sns.set()

# making a count plot for "Survived" column
sns.countplot( x='Survived', data = titanic_data)

# finding the no. of male and female
titanic_data['Sex'].value_counts()

# making a count plot for "SEX" column
sns.countplot(x='Sex', data = titanic_data)

# no. of survivors(GENDERwise)
sns.countplot(x='Sex', hue='Survived', data=titanic_data)

# making a count plot for "PCLASS" column
sns.countplot(x='Pclass', data = titanic_data)

# no. of survivors(PLCLASSwise)
sns.countplot(x='Pclass', hue='Survived', data=titanic_data)

# no. of survivors(EMBARKEDwise)
sns.countplot(x='Embarked', hue='Survived', data=titanic_data)

"""ENCODING THE CATEGORICAL COLUMN"""

# finding the no. of male and female
titanic_data['Sex'].value_counts()

# finding the no. of EMBARKED values
titanic_data['Embarked'].value_counts()

# converting catogorical columns
titanic_data.replace({'Sex':{'male':0,'female':1},'Embarked':{'S':0,'C':1,'Q':2}}, inplace=True)

titanic_data.head()

"""SEPRATING FEATURES & TARGET [Our target is 'SURVIVED']"""

# removing unwanted columns and target column
# when remove a column -> axis = 1
# when remove a row    -> axis = 0
X = titanic_data.drop(columns = ['PassengerId', 'Ticket', 'Name', 'Survived'], axis=1)

# storing target column in another dataframe
Y = titanic_data['Survived']

print(X)

print(Y)

"""SPLITTING THE DATA IN TRAINING DATA & TESTING DATA"""

# creating 4 arrays
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=2)

print(X.shape, X_train.shape, X_test.shape)

"""MODEL TRAINING

LOGISTIC REGRESSION
"""

model = LogisticRegression()

# training the LogisticRegression model with training data
model.fit(X_train,Y_train)

"""MODEL EVALUATION

ACCURACY SCORE
"""

#accuracy on training data
X_train_prediction = model.predict(X_train)

print(X_train_prediction)

training_data_accuracy = accuracy_score(Y_train, X_train_prediction)
print('Accuracy Score of training data :', training_data_accuracy)

#accuracy on testing data
X_test_prediction = model.predict(X_test)

print(X_test_prediction)

test_data_accuracy = accuracy_score(Y_test, X_test_prediction)
print('Accuracy Score of testing data :', test_data_accuracy)

